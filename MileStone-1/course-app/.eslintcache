[{"C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\index.js":"1","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\App.js":"2","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\reportWebVitals.js":"3","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\GPAConversions.js":"4","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\FinalGradeDetermination.js":"5","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\CourseObjectives.js":"6","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Sections.js":"7","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\CourseInstructors.js":"8","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\TextBook.js":"9","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Examinations.js":"10","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\GraduateAttributesTable.js":"11","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Calendar.js":"12","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Calculator.js":"13","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Policies.js":"14","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Notes.js":"15","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Collapsible.js":"16","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\ReqTextBook.js":"17","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\TA.js":"18","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Coordinator.js":"19","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\CourseSelector.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":2399,"mtime":1611365155876,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":12080,"mtime":1610687313417,"results":"25","hashOfConfig":"22"},{"size":9267,"mtime":1610687313416,"results":"26","hashOfConfig":"22"},{"size":9294,"mtime":1610687313414,"results":"27","hashOfConfig":"22"},{"size":8644,"mtime":1610687313422,"results":"28","hashOfConfig":"22"},{"size":9911,"mtime":1610687313412,"results":"29","hashOfConfig":"22"},{"size":9333,"mtime":1610687313424,"results":"30","hashOfConfig":"22"},{"size":8964,"mtime":1610687313415,"results":"31","hashOfConfig":"22"},{"size":8998,"mtime":1610687313418,"results":"32","hashOfConfig":"22"},{"size":4612,"mtime":1610687313410,"results":"33","hashOfConfig":"22"},{"size":2921,"mtime":1610687313409,"results":"34","hashOfConfig":"22"},{"size":2761,"mtime":1610687313420,"results":"35","hashOfConfig":"22"},{"size":2793,"mtime":1610687313419,"results":"36","hashOfConfig":"22"},{"size":8908,"mtime":1610687313410,"results":"37","hashOfConfig":"22"},{"size":8275,"mtime":1610687313421,"results":"38","hashOfConfig":"22"},{"size":9911,"mtime":1610687313423,"results":"39","hashOfConfig":"22"},{"size":9929,"mtime":1610687313411,"results":"40","hashOfConfig":"22"},{"size":844,"mtime":1611365522453,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5kf33o",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"44"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\index.js",[],["99","100"],"C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\App.js",["101","102"],"C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\reportWebVitals.js",[],"C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\GPAConversions.js",["103","104","105","106","107","108"],"import 'bulma/css/bulma.css';\r\nimport React, { useState, useEffect , Component} from 'react'\r\nimport './Components.css';\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/gpa_conversions/\";\r\n\r\n  var arrayLength = state.GPAConversions.length;\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    console.log('In for loop');\r\n\r\n    axios.post(API_URL, state.GPAConversions[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/gpa_conversions/${state.GPAConversions[i].id}`, state.GPAConversions[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}}\r\n\r\n\r\n\r\nasync function update_Django(state) {\r\n  const response = update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\nclass GPAConversions extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      //  this.state.GPAConversions = [];\r\n      this.state = {};\r\n      this.state.filterText = \"\";\r\n\r\n      var API_URL = \"http://localhost:8000/api/gpa_conversions/\";\r\n\r\n      this.state.GPAConversions = [\r\n        {\r\n          id: 1,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: 'T >=',\r\n          name: 'A+',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 2,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'A',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 3,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'A-',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 4,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'B+',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 5,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'B',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 6,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'B-',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 7,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'C+',\r\n          course_outline_id: 101\r\n        },{\r\n          id: 8,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'C',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 9,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'C-',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 10,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'D+',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 11,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: '=< T <',\r\n          name: 'D',\r\n          course_outline_id: 101\r\n        }, {\r\n          id: 12,\r\n          lowerGrade: '',\r\n          upperGrade: '',\r\n          T_sign: 'T <',\r\n          name: 'F',\r\n          course_outline_id: 101\r\n        }\r\n      ];     \r\n      axios\r\n      .get(API_URL)\r\n      .then(res => this.setState({ GPAConversions: res.data }))\r\n      .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if(this.props.isClicked !== prevProps.isClicked || this.state.GPAConversions.length< 10){\r\n         this.setState({\r\n          filterText : '',\r\n          GPAConversions:[\r\n  \r\n            {\r\n              id: 1,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: 'T >=',\r\n              name: 'A+',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 2,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'A',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 3,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'A-',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 4,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'B+',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 5,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'B',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 6,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'B-',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 7,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'C+',\r\n              course_outline_id: 101\r\n            },{\r\n              id: 8,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'C',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 9,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'C-',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 10,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'D+',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 11,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: '=< T <',\r\n              name: 'D',\r\n              course_outline_id: 101\r\n            }, {\r\n              id: 12,\r\n              lowerGrade: '',\r\n              upperGrade: '',\r\n              T_sign: 'T <',\r\n              name: 'F',\r\n              course_outline_id: 101\r\n            }\r\n           \r\n          ]\r\n       });\r\n        console.log(update_Django(this.state));\r\n      }\r\n\r\n    }\r\n  \r\n    handleUserInput(filterText) {\r\n      this.setState({filterText: filterText});\r\n    };\r\n\r\n  \r\n\r\n    handleSend(evt) {\r\n      console.log(this.state.GPAConversions);\r\n      console.log(update_Django(this.state));\r\n\r\n    }\r\n\r\n    handleGPAConversionTable(evt) {\r\n      var item = {\r\n        id: evt.target.id,\r\n        name: evt.target.name,\r\n        value: evt.target.value\r\n      };\r\n  var GPAConversions = this.state.GPAConversions.slice();\r\n    var newGPAConversions = GPAConversions.map(function(GPAConversion) {\r\n  \r\n      for (var key in GPAConversion) {\r\n        if (key == item.name && GPAConversion.id == item.id) {\r\n          GPAConversion[key] = item.value;\r\n  \r\n        }\r\n      }\r\n      return GPAConversion;\r\n    });\r\n      this.setState({GPAConversions:newGPAConversions});\r\n    };\r\n    render() {\r\n  \r\n      return (\r\n        <div>\r\n          <GPAConversionTable onGPAConversionTableUpdate={this.handleGPAConversionTable.bind(this)} onRowUpdate={this.handleSend.bind(this)}  GPAConversions={this.state.GPAConversions} filterText={this.state.filterText}/>\r\n          <br></br>\r\n          <button\r\n        className=\"button is-rounded is-warning is-medium\"\r\n        onClick={this.handleSend.bind(this)}\r\n      >\r\n        Update Form\r\n      </button>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n\r\n  export default GPAConversions;\r\n\r\n  \r\n  \r\n  class GPAConversionTable extends React.Component {\r\n  \r\n    render() {\r\n      var onGPAConversionTableUpdate = this.props.onGPAConversionTableUpdate;\r\n      var rowDel = this.props.onRowDel;\r\n      var filterText = this.props.filterText;\r\n      var GPAConversion = this.props.GPAConversions.map(function(GPAConversion) {\r\n        if (GPAConversion.name.indexOf(filterText) === -1) {\r\n          return;\r\n        }\r\n        return (<GPAConversionRow onGPAConversionTableUpdate={onGPAConversionTableUpdate} GPAConversion={GPAConversion} key={GPAConversion.id}/>)\r\n      });\r\n      return (\r\n        <div>\r\n  \r\n  <div className=\"columns is-max-desktop is-centered\">\r\n          <table className=\"table is-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Letter Grade</th>\r\n                <th></th>\r\n                <th >Total Mark (T)</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n  \r\n            <tbody>\r\n              {GPAConversion}\r\n  \r\n            </tbody>\r\n  \r\n          </table>\r\n               \r\n        </div>\r\n        </div>\r\n        \r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n  \r\n  class GPAConversionRow extends React.Component {\r\n    onDelEvent() {\r\n      this.props.onDelEvent(this.props.GPAConversion);\r\n  \r\n    }\r\n    render() {\r\n  \r\n      return (\r\n        <tr>\r\n          <NonEditableCell onGPAConversionTableUpdate={this.props.onGPAConversionTableUpdate} cellData={{\r\n            \"type\": \"name\",\r\n            value: this.props.GPAConversion.name,\r\n            id: this.props.GPAConversion.id\r\n          }}/>\r\n          <EditableCell onGPAConversionTableUpdate={this.props.onGPAConversionTableUpdate} cellData={{\r\n            type: \"upperGrade\",\r\n            value: this.props.GPAConversion.upperGrade,\r\n            id: this.props.GPAConversion.id\r\n          }}/>\r\n          <NonEditableCell onGPAConversionTableUpdate={this.props.onGPAConversionTableUpdate} cellData={{\r\n            type: \"T_sign\",\r\n            value: this.props.GPAConversion.T_sign,\r\n            id: this.props.GPAConversion.id\r\n          }}/>\r\n          <EditableCell onGPAConversionTableUpdate={this.props.onGPAConversionTableUpdate} cellData={{\r\n            type: \"lowerGrade\",\r\n            value: this.props.GPAConversion.lowerGrade,\r\n            id: this.props.GPAConversion.id\r\n          }}/>\r\n  \r\n        </tr>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  class EditableCell extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <input type='number' class='last-table-cell' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onGPAConversionTableUpdate}/>\r\n        </td>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  class NonEditableCell extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <input readonly type='text' class='last-table-cell' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} />\r\n        </td>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n  /*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\FinalGradeDetermination.js",["109","110","111","112","113","114"],"import \"bulma/css/bulma.css\";\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport \"./Components.css\";\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/final_grades/\";\r\n\r\n  var arrayLength = state.finalGrades.length;\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    \r\n    axios.post(API_URL, state.finalGrades[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/final_grades/${state.finalGrades[i].id}`, state.finalGrades[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\nclass FinalGradeDeterminations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      filterText: \"\",\r\n      finalGrades: [\r\n        {\r\n          id: 1,\r\n          course_outline_id: 101,\r\n          weight: \"\",\r\n          learningOutcome: \"\",\r\n          finalGrade: \"\",\r\n          name: \"\",\r\n        },\r\n      ],\r\n    };\r\n    var API_URL = \"http://localhost:8000/api/final_grades/\";\r\n    axios\r\n    .get(API_URL)\r\n    .then(res => this.setState({ finalGrades: res.data }))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.isClicked !== prevProps.isClicked || this.state.finalGrades.length < 1){\r\n       this.setState({\r\n        filterText : '',\r\n        finalGrades:[\r\n          {\r\n            id: 1,\r\n            course_outline_id: 101,\r\n            weight: \"\",\r\n            learningOutcome: \"\",\r\n            finalGrade: \"\",\r\n            name: \"\",\r\n          }\r\n        ]\r\n     });\r\n     console.log(update_Django(this.state));\r\n    }\r\n  \r\n  }\r\n\r\n  handleUserInput(filterText) {\r\n    this.setState({ filterText: filterText });\r\n  }\r\n  handleRowDel(finalGrade) {\r\n    var index = this.state.finalGrades.indexOf(finalGrade);\r\n    axios.delete(`http://localhost:8000/api/final_grades/${this.state.finalGrades[index].id}`).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    this.state.finalGrades.splice(index, 1);\r\n\r\n    var temp_state = this.state.finalGrades\r\n    var arrayLength = temp_state.length;\r\n    for (var i = 0; i < arrayLength; i++) {\r\n      temp_state[i].id = i+1;\r\n    }\r\n\r\n    this.setState(temp_state);  \r\n  }\r\n\r\n  handleAddEvent(evt) {\r\n    var id = this.state.finalGrades.length+1;\r\n    var finalGrade = {\r\n      id: id,\r\n      course_outline_id: 101,\r\n      name: \"\",\r\n      learningOutcome: \"\",\r\n      weight: \"\",\r\n    };\r\n    this.state.finalGrades.push(finalGrade);\r\n    this.setState(this.state.finalGrades);\r\n  }\r\n\r\n  handleSend(evt) {\r\n    console.log(this.state.finalGrades);\r\n    console.log(update_Django(this.state));\r\n\r\n  }\r\n\r\n  handleFinalGradesTable(evt) {\r\n    var item = {\r\n      id: evt.target.id,\r\n      name: evt.target.name,\r\n      value: evt.target.value,\r\n    };\r\n    var finalGrades = this.state.finalGrades.slice();\r\n    var newFinalGrades = finalGrades.map(function (finalGrade) {\r\n      for (var key in finalGrade) {\r\n        if (key == item.name && finalGrade.id == item.id) {\r\n          finalGrade[key] = item.value;\r\n        }\r\n      }\r\n      return finalGrade;\r\n    });\r\n    this.setState({ finalGrades: newFinalGrades });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FinalGradesTable\r\n          onFinalGradesTableUpdate={this.handleFinalGradesTable.bind(this)}\r\n          onRowAdd={this.handleAddEvent.bind(this)}\r\n          onRowDel={this.handleRowDel.bind(this)}\r\n          finalGrades={this.state.finalGrades}\r\n          filterText={this.state.filterText}\r\n        />\r\n        <button\r\n          className=\"button is-warning is-rounded is-medium\"\r\n          onClick={this.handleSend.bind(this)}\r\n        >\r\n          Update Form\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FinalGradeDeterminations;\r\n\r\nclass FinalGradesTable extends React.Component {\r\n  render() {\r\n    var onFinalGradesTableUpdate = this.props.onFinalGradesTableUpdate;\r\n    var rowDel = this.props.onRowDel;\r\n    var filterText = this.props.filterText;\r\n    var finalGrade = this.props.finalGrades.map(function (finalGrade) {\r\n      if (finalGrade.name.indexOf(filterText) === -1) {\r\n        return;\r\n      }\r\n      return (\r\n        <FinalGradeRow\r\n          onFinalGradesTableUpdate={onFinalGradesTableUpdate}\r\n          finalGrade={finalGrade}\r\n          onDelEvent={rowDel.bind(this)}\r\n          key={finalGrade.id}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"columns is-max-desktop is-centered\">\r\n        \r\n          <div>\r\n            <table className=\"table is-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Component</th>\r\n                  <th>Learning Outcome(s) Evaluated</th>\r\n                  <th>Weight</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>{finalGrade}</tbody>\r\n            </table>\r\n            <button\r\n              onClick={this.props.onRowAdd}\r\n              className=\"button is-primary is-rounded\"\r\n            >\r\n              Add New\r\n            </button>\r\n          </div>\r\n        </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nclass FinalGradeRow extends React.Component {\r\n  onDelEvent() {\r\n    this.props.onDelEvent(this.props.finalGrade);\r\n  }\r\n  render() {\r\n    return (\r\n      // <tr className=\"eachRow\">\r\n      <tr>\r\n        <EditableFinalGradeCell\r\n          onFinalGradesTableUpdate={this.props.onFinalGradesTableUpdate}\r\n          cellData={{\r\n            type: \"name\",\r\n            value: this.props.finalGrade.name,\r\n            id: this.props.finalGrade.id,\r\n          }}\r\n        />\r\n        <EditableFinalGradeCell\r\n          onFinalGradesTableUpdate={this.props.onFinalGradesTableUpdate}\r\n          cellData={{\r\n            type: \"learningOutcome\",\r\n            value: this.props.finalGrade.learningOutcome,\r\n            id: this.props.finalGrade.id,\r\n          }}\r\n        />\r\n        <EditableFinalGradeCellNumbers\r\n          onFinalGradesTableUpdate={this.props.onFinalGradesTableUpdate}\r\n          cellData={{\r\n            type: \"weight\",\r\n            value: this.props.finalGrade.weight,\r\n            id: this.props.finalGrade.id,\r\n          }}\r\n        />\r\n        <td className=\"del-cell\">\r\n          <button\r\n            onClick={this.onDelEvent.bind(this)}\r\n            className=\"button is-danger is-rounded is-fullwidth\"\r\n          >\r\n            Remove\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\nclass EditableFinalGradeCell extends React.Component {\r\n  render() {\r\n    return (\r\n      // <td className='EditableCell'>\r\n      <td>\r\n        <textarea\r\n          class=\"textarea is-info\"\r\n          rows=\"2\"\r\n          name={this.props.cellData.type}\r\n          id={this.props.cellData.id}\r\n          value={this.props.cellData.value}\r\n          onChange={this.props.onFinalGradesTableUpdate}\r\n        />\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableFinalGradeCellNumbers extends React.Component {\r\n  render() {\r\n    return (\r\n      // <td className='EditableCell'>\r\n      <td>\r\n        <input\r\n          type=\"number\"\r\n          name={this.props.cellData.type}\r\n          id={this.props.cellData.id}\r\n          value={this.props.cellData.value}\r\n          onChange={this.props.onFinalGradesTableUpdate}\r\n        />\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\CourseObjectives.js",["115","116","117","118","119","120"],"import \"bulma/css/bulma.css\";\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport \"./Components.css\";\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/course_objectives/\";\r\n\r\n  var arrayLength = state.courseObjectives.length;\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    \r\n    axios.post(API_URL, state.courseObjectives[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/course_objectives/${state.courseObjectives[i].id}`, state.courseObjectives[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\n\r\nclass CourseObjectives extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      filterText : \"\",\r\n      courseObjectives : [\r\n        {\r\n          id: 1,\r\n          publicID: 1,\r\n          course_outline_id: 101,\r\n          name: \"\",\r\n        },\r\n        {\r\n          id: 2,\r\n          publicID: 2,\r\n          course_outline_id: 101,\r\n          name: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    var API_URL = \"http://localhost:8000/api/course_objectives/\";\r\n    axios\r\n    .get(API_URL)\r\n    .then(res => this.setState({ courseObjectives: res.data }))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.isClicked !== prevProps.isClicked || this.state.courseObjectives.length< 1){\r\n       this.setState({\r\n        filterText : '',\r\n        courseObjectives:[\r\n          {\r\n          id: 1,\r\n          publicID: 1,\r\n          course_outline_id: 101,\r\n          name: \"\",\r\n          }\r\n        ]\r\n     });\r\n     console.log(update_Django(this.state));\r\n    }\r\n  }\r\n\r\n\r\n  handleUserInput(filterText) {\r\n    this.setState({ filterText: filterText });\r\n  }\r\n  handleRowDel(courseObjective) {\r\n    var index = this.state.courseObjectives.indexOf(courseObjective);\r\n    axios.delete(`http://localhost:8000/api/course_objectives/${this.state.courseObjectives[index].id}`).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    this.state.courseObjectives.splice(index, 1);\r\n\r\n\r\n    var temp_state = this.state.courseObjectives;\r\n    var arrayLength = temp_state.length;\r\n    for (var i = 0; i < arrayLength; i++) {\r\n      temp_state[i].id = i+1;\r\n      temp_state[i].publicID = i+1;\r\n    }\r\n\r\n    this.setState(temp_state);\r\n  }\r\n\r\n  handleAddEvent(evt) {\r\n    var id = this.state.courseObjectives.length + 1;\r\n    var courseObjective = {\r\n      id: id,\r\n      name: \"\",\r\n      course_outline_id: 101,\r\n      publicID: id,\r\n    };\r\n    this.state.courseObjectives.push(courseObjective);\r\n    this.setState(this.state.courseObjectives);\r\n  }\r\n\r\n  handleSend(evt) {\r\n    console.log(this.state.courseObjectives);\r\n    console.log(update_Django(this.state));\r\n  }\r\n\r\n  handleCourseObjectivesTable(evt) {\r\n    var item = {\r\n      id: evt.target.id,\r\n      name: evt.target.name,\r\n      value: evt.target.value,\r\n    };\r\n    var courseObjectives = this.state.courseObjectives.slice();\r\n    var newCourseObjectives = courseObjectives.map(function (courseObjective) {\r\n      for (var key in courseObjective) {\r\n        if (key == item.name && courseObjective.id == item.id) {\r\n          courseObjective[key] = item.value;\r\n        }\r\n      }\r\n      return courseObjective;\r\n    });\r\n    this.setState({ courseObjectives: newCourseObjectives });\r\n    //  console.log(this.state.courseObjectives);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CourseObjectivesTable\r\n          onCourseObjectivesTableUpdate={this.handleCourseObjectivesTable.bind(\r\n            this\r\n          )}\r\n          onCourseObjectivesRowAdd={this.handleAddEvent.bind(this)}\r\n          onRowDel={this.handleRowDel.bind(this)}\r\n          courseObjectives={this.state.courseObjectives}\r\n          filterText={this.state.filterText}\r\n        />\r\n        <button\r\n          className=\"button is-rounded is-warning is-medium\"\r\n          onClick={this.handleSend.bind(this)}\r\n        >\r\n          Update Form\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CourseObjectivesTable extends React.Component {\r\n  render() {\r\n    var onCourseObjectivesTableUpdate = this.props\r\n      .onCourseObjectivesTableUpdate;\r\n    var rowDel = this.props.onRowDel;\r\n    var filterText = this.props.filterText;\r\n    var courseObjective = this.props.courseObjectives.map(function (\r\n      courseObjective\r\n    ) {\r\n      if (courseObjective.name.indexOf(filterText) === -1) {\r\n        return;\r\n      }\r\n      return (\r\n        <CourseObjectivesRow\r\n          onCourseObjectivesTableUpdate={onCourseObjectivesTableUpdate}\r\n          courseObjective={courseObjective}\r\n          onDelEvent={rowDel.bind(this)}\r\n          key={courseObjective.id}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"columns is-max-desktop is-centered\">\r\n        <div>\r\n          <table className=\"table is-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Description</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>{courseObjective}</tbody>\r\n          </table>\r\n          <button\r\n            onClick={this.props.onCourseObjectivesRowAdd}\r\n            className=\"button is-primary is-rounded\"\r\n          >\r\n            Add New Row\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CourseObjectivesRow extends React.Component {\r\n  onDelEvent() {\r\n    this.props.onDelEvent(this.props.courseObjective);\r\n  }\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <CourseObjectivesEditableCellNumbers\r\n          onCourseObjectivesTableUpdate={\r\n            this.props.onCourseObjectivesTableUpdate\r\n          }\r\n          cellData={{\r\n            type: \"publicID\",\r\n            value: this.props.courseObjective.publicID,\r\n            id: this.props.courseObjective.id,\r\n          }}\r\n        />\r\n        <CourseObjectivesEditableCell\r\n          onCourseObjectivesTableUpdate={\r\n            this.props.onCourseObjectivesTableUpdate\r\n          }\r\n          cellData={{\r\n            type: \"name\",\r\n            value: this.props.courseObjective.name,\r\n            id: this.props.courseObjective.id,\r\n          }}\r\n        />\r\n         <td className=\"del-cell\">\r\n        <button\r\n          onClick={this.onDelEvent.bind(this)}\r\n          className=\"button is-danger is-rounded\"\r\n        >\r\n          Remove\r\n        </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\nclass CourseObjectivesEditableCell extends React.Component {\r\n  render() {\r\n    return (\r\n      <td>\r\n        <textarea\r\n          class=\"textarea is-info is-fullwidth is-large\"\r\n          rows=\"2\"\r\n          name={this.props.cellData.type}\r\n          id={this.props.cellData.id}\r\n          value={this.props.cellData.value}\r\n          onChange={this.props.onCourseObjectivesTableUpdate}\r\n        />\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass CourseObjectivesEditableCellNumbers extends React.Component {\r\n  render() {\r\n    return (\r\n  \r\n      <td>\r\n        <input\r\n          type=\"number\"\r\n          name={this.props.cellData.type}\r\n          id={this.props.cellData.id}\r\n          value={this.props.cellData.value}\r\n          onChange={this.props.onCourseObjectivesTableUpdate}\r\n        />\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseObjectives;\r\n\r\n/*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Sections.js",["121","122","123","124","125","126"],"import 'bulma/css/bulma.css';\r\nimport React, { useState, useEffect , Component} from 'react'\r\nimport './Components.css';\r\nimport axios from \"axios\";\r\n\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/sections/\";\r\n\r\n  var arrayLength = state.sections.length;\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    \r\n    axios.post(API_URL, state.sections[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/sections/${state.sections[i].id}`, state.sections[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}\r\n}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\nclass Sections extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {};\r\n      this.state.filterText = \"\";\r\n      this.state.sections = [\r\n        {\r\n          id: 1,\r\n          name: '',\r\n          days: '',\r\n          time: '',\r\n          location: '',\r\n          course_outline_id: 101,\r\n        },\r\n     \r\n      ];\r\n\r\n      var API_URL = \"http://localhost:8000/api/sections/\";\r\n      axios\r\n      .get(API_URL)\r\n      .then(res => this.setState({ sections: res.data }))\r\n      .catch(err => console.log(err));\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if(this.props.isClicked !== prevProps.isClicked || this.state.sections.length< 1){\r\n         this.setState({\r\n          filterText : '',\r\n          sections:[\r\n            {\r\n              id: 1,\r\n              name: '',\r\n              days: '',\r\n              time: '',\r\n              location: '',\r\n              course_outline_id: 101,\r\n            }\r\n          ]\r\n       });\r\n        console.log(update_Django(this.state));\r\n      }\r\n    }\r\n    handleUserInput(filterText) {\r\n      this.setState({filterText: filterText});\r\n    };\r\n    handleRowDel(section) {\r\n      var index = this.state.sections.indexOf(section);\r\n      axios.delete(`http://localhost:8000/api/sections/${this.state.sections[index].id}`).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n      this.state.sections.splice(index, 1);\r\n      var temp_state = this.state.sections;\r\n      var arrayLength = temp_state.length;\r\n      for (var i = 0; i < arrayLength; i++) {\r\n        temp_state[i].id = i+1;\r\n      }\r\n  \r\n      this.setState(temp_state);      \r\n    };\r\n  \r\n    handleAddEvent(evt) {\r\n      var id = this.state.sections.length+1 ;\r\n      var section = {\r\n        id: id,\r\n        name: '',\r\n        days: '',\r\n        time: '',\r\n        location: '',\r\n        course_outline_id: 101,\r\n        \r\n      }\r\n      this.state.sections.push(section);\r\n      this.setState(this.state.sections);\r\n  \r\n    }\r\n\r\n    handleSend(evt){\r\n      console.log(this.state.sections);\r\n      console.log(update_Django(this.state));\r\n\r\n    }\r\n  \r\n    handleSectionsTable(evt) {\r\n      var item = {\r\n        id: evt.target.id,\r\n        name: evt.target.name,\r\n        value: evt.target.value\r\n      };\r\n  var sections = this.state.sections.slice();\r\n    var newSections = sections.map(function(section) {\r\n  \r\n      for (var key in section) {\r\n        if (key == item.name && section.id == item.id) {\r\n          section[key] = item.value;\r\n  \r\n        }\r\n      }\r\n      return section;\r\n    });\r\n      this.setState({sections:newSections});\r\n    //  console.log(this.state.sections);\r\n    };\r\n    render() {\r\n  \r\n      return (\r\n        <div>\r\n          <SectionsTable onSectionsTableUpdate={this.handleSectionsTable.bind(this)} onSectionsRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} sections={this.state.sections} filterText={this.state.filterText}/>\r\n          <button className = 'button is-warning is-rounded is-medium' onClick={this.handleSend.bind(this)}>Update Form</button>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n  class SectionsTable extends React.Component {\r\n  \r\n    render() {\r\n      var onSectionsTableUpdate = this.props.onSectionsTableUpdate;\r\n      var rowDel = this.props.onRowDel;\r\n      var filterText = this.props.filterText;\r\n      var section = this.props.sections.map(function(section) {\r\n        if (section.name.indexOf(filterText) === -1) {\r\n          return;\r\n        }\r\n        return (<SectionsRow onSectionsTableUpdate={onSectionsTableUpdate} section={section} onDelEvent={rowDel.bind(this)} key={section.id}/>)\r\n      });\r\n      return (\r\n        <div className=\"columns is-max-desktop is-centered\">\r\n        <div>\r\n  \r\n  \r\n          <table className=\"table is-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Section</th>\r\n                <th>Day(s) of the Week</th>\r\n                <th>Time</th>\r\n                <th>Location</th>\r\n              </tr>\r\n            </thead>\r\n  \r\n            <tbody>\r\n              {section}\r\n  \r\n            </tbody>\r\n  \r\n          </table>\r\n          <button onClick={this.props.onSectionsRowAdd} className=\"button is-primary is-rounded\">Add New Row</button>\r\n  \r\n        </div>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  class SectionsRow extends React.Component {\r\n    onDelEvent() {\r\n      this.props.onDelEvent(this.props.section);\r\n  \r\n    }\r\n    render() {\r\n  \r\n      return (\r\n        <tr>\r\n          <SectionsEditableCell onSectionsTableUpdate={this.props.onSectionsTableUpdate} cellData={{\r\n            type: \"name\",\r\n            value: this.props.section.name,\r\n            id: this.props.section.id\r\n          }}/>\r\n          <SectionsEditableCell onSectionsTableUpdate={this.props.onSectionsTableUpdate} cellData={{\r\n            type: \"days\",\r\n            value: this.props.section.days,\r\n            id: this.props.section.id\r\n          }}/>\r\n            <SectionsEditableCell onSectionsTableUpdate={this.props.onSectionsTableUpdate} cellData={{\r\n            type: \"time\",\r\n            value: this.props.section.time,\r\n            id: this.props.section.id\r\n          }}/>\r\n          <SectionsEditableCell onSectionsTableUpdate={this.props.onSectionsTableUpdate} cellData={{\r\n            type: \"location\",\r\n            value: this.props.section.location,\r\n            id: this.props.section.id\r\n          }}/>\r\n         \r\n            <button onClick={this.onDelEvent.bind(this)}  className=\"button is-danger is-rounded\">Remove</button>\r\n        \r\n        </tr>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  class SectionsEditableCell extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <textarea class=\"textarea is-info\" rows=\"2\" name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onSectionsTableUpdate}/>\r\n        </td>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n\r\n  export default Sections\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n   /*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\CourseInstructors.js",["127","128","129","130","131","132"],"import 'bulma/css/bulma.css';\r\nimport React, { useState, useEffect , Component} from 'react'\r\nimport './Components.css';\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/instructors/\";\r\n\r\n  var arrayLength = state.instructors.length;\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    \r\n    axios.post(API_URL, state.instructors[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/instructors/${state.instructors[i].id}`, state.instructors[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\nclass CourseInstructors extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {};\r\n      this.state.filterText = \"\";\r\n      this.state.instructors = [\r\n        {\r\n          id: 1,\r\n          course_outline_id: 101,\r\n          section: '',\r\n          fname: '',\r\n          lname: '',\r\n          phone: '',\r\n          office: '',\r\n          email: '',\r\n        },\r\n     \r\n      ];\r\n      var API_URL = \"http://localhost:8000/api/instructors/\";\r\n      axios\r\n      .get(API_URL)\r\n      .then(res => this.setState({ instructors: res.data }))\r\n      .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if(this.props.isClicked !== prevProps.isClicked || this.state.instructors.length< 1){\r\n         this.setState({\r\n          filterText : '',\r\n          instructors:[\r\n            {\r\n              id: 1,\r\n              course_outline_id: 101,\r\n              section: '',\r\n              fname: '',\r\n              lname: '',\r\n              phone: '',\r\n              office: '',\r\n              email: '',\r\n            }\r\n          ]\r\n       });\r\n      console.log(update_Django(this.state));\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    handleUserInput(filterText) {\r\n      this.setState({filterText: filterText});\r\n    };\r\n    handleRowDel(instructor) {\r\n      var index = this.state.instructors.indexOf(instructor);\r\n      axios.delete(`http://localhost:8000/api/instructors/${this.state.instructors[index].id}`).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n\r\n      this.state.instructors.splice(index, 1);\r\n      var temp_state = this.state.instructors;\r\n      var arrayLength = temp_state.length;\r\n      for (var i = 0; i < arrayLength; i++) {\r\n        temp_state[i].id = i+1;\r\n      }\r\n  \r\n      this.setState(temp_state);\r\n\r\n    };\r\n\r\n    handleSend(evt){\r\n      console.log(this.state.instructors);\r\n      console.log(update_Django(this.state));\r\n    }\r\n  \r\n    handleAddEvent(evt) {\r\n      var id = this.state.instructors.length + 1;\r\n      var instructor = {\r\n        id: id,\r\n        course_outline_id: 101,\r\n        section: '',\r\n        fname: '',\r\n        lname: '',\r\n        phone: '',\r\n        office: '',\r\n        email: '',\r\n      }\r\n      this.state.instructors.push(instructor);\r\n      this.setState(this.state.instructors);\r\n  \r\n    }\r\n  \r\n    handleInstructorsTable(evt) {\r\n      var item = {\r\n        id: evt.target.id,\r\n        name: evt.target.name,\r\n        value: evt.target.value\r\n      };\r\n  var instructors = this.state.instructors.slice();\r\n    var newinstructors = instructors.map(function(instructor) {\r\n  \r\n      for (var key in instructor) {\r\n        if (key == item.name && instructor.id == item.id) {\r\n          instructor[key] = item.value;\r\n  \r\n        }\r\n      }\r\n      return instructor;\r\n    });\r\n      this.setState({instructors:newinstructors});\r\n    //  console.log(this.state.instructors);\r\n    };\r\n    render() {\r\n  \r\n      return (\r\n        <div>\r\n          <InstructorsTable onInstructorsTableUpdate={this.handleInstructorsTable.bind(this)} onInstructorRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} instructors={this.state.instructors} filterText={this.state.filterText}/>\r\n          <button className = 'button is-warning is-rounded is-medium' onClick={this.handleSend.bind(this)}>Update Form</button>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n  class InstructorsTable extends React.Component {\r\n  \r\n    render() {\r\n      var onInstructorsTableUpdate = this.props.onInstructorsTableUpdate;\r\n      var rowDel = this.props.onRowDel;\r\n      var filterText = this.props.filterText;\r\n      var instructor = this.props.instructors.map(function(instructor) {\r\n        if (instructor.section.indexOf(filterText) === -1) {\r\n          return;\r\n        }\r\n        return (<InstructorRow onInstructorsTableUpdate={onInstructorsTableUpdate} instructor={instructor} onDelEvent={rowDel.bind(this)} key={instructor.id}/>)\r\n      });\r\n      return (\r\n        <div className=\"columns is-max-desktop is-centered\">\r\n        <div>\r\n  \r\n  \r\n          <table className=\"table is-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Section</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Phone</th>\r\n                <th>Office</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n  \r\n            <tbody>\r\n              {instructor}\r\n  \r\n            </tbody>\r\n  \r\n          </table>\r\n          <button onClick={this.props.onInstructorRowAdd} className=\"button is-primary is-rounded\">Add New Row</button>\r\n  \r\n        </div>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  class InstructorRow extends React.Component {\r\n    onDelEvent() {\r\n      this.props.onDelEvent(this.props.instructor);\r\n  \r\n    }\r\n    render() {\r\n  \r\n      return (\r\n        <tr>\r\n          <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"section\",\r\n            value: this.props.instructor.section,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n          <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"fname\",\r\n            value: this.props.instructor.fname,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n           <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"lname\",\r\n            value: this.props.instructor.lname,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n            <InstructorEditableCellNumbers onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"phone\",\r\n            value: this.props.instructor.phone,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n          <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"office\",\r\n            value: this.props.instructor.office,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n             <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"email\",\r\n            value: this.props.instructor.email,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n           <button onClick={this.onDelEvent.bind(this)}  className=\"button is-danger is-rounded\">Remove</button>\r\n        </tr>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  class InstructorEditableCell extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <textarea class=\"textarea is-info\" rows=\"2\" name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onInstructorsTableUpdate}/>\r\n        </td>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n  class InstructorEditableCellNumbers extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <input type='number' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onInstructorsTableUpdate}/>\r\n        </td>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  export default CourseInstructors\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n   /*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\TextBook.js",["133","134","135","136","137","138"],"import 'bulma/css/bulma.css';\r\nimport React, { useState, useEffect, Component } from 'react'\r\nimport './Components.css';\r\nimport axios from \"axios\";\r\n\r\n\r\nasync function update_Django_backend(state) {\r\n    var API_URL = \"http://localhost:8000/api/recommended_textbooks/\";\r\n\r\n    var arrayLength = state.textbooks.length;\r\n    for (var i = 0; i < arrayLength; i++) {\r\n      \r\n      axios.post(API_URL, state.textbooks[i]).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n      \r\n      //may somehow get away with doing it without duplicates\r\n      axios.put(`http://localhost:8000/api/recommended_textbooks/${state.textbooks[i].id}`, state.textbooks[i]).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n  }\r\n  }\r\n  \r\n  async function update_Django(state) {\r\n    const response = await update_Django_backend(state);\r\n    return response;\r\n  }\r\n\r\nclass TextBook extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.filterText = \"\";\r\n        this.state.textbooks = [\r\n            {\r\n                id: 1,\r\n                title: '',\r\n                author: '',\r\n                edition: '',\r\n                publisher: '',\r\n                course_outline_id:101,\r\n            },\r\n        ];\r\n        var API_URL = \"http://localhost:8000/api/recommended_textbooks/\";\r\n        axios\r\n        .get(API_URL)\r\n        .then(res => this.setState({ textbooks: res.data }))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.isClicked !== prevProps.isClicked || this.state.textbooks.length< 1){\r\n           this.setState({\r\n            filterText : '',\r\n            textbooks:[\r\n              {\r\n                id: 1,\r\n                title: '',\r\n                author: '',\r\n                edition: '',\r\n                publisher: '',\r\n                course_outline_id:101,\r\n              }\r\n            ]\r\n         });\r\n          console.log(update_Django(this.state));\r\n        }\r\n      }\r\n\r\n    handleSend(evt){\r\n        console.log(this.state.textbooks);\r\n        console.log(update_Django(this.state));\r\n\r\n      }\r\n\r\n    handleUserInput(filterText) {\r\n        this.setState({ filterText: filterText });\r\n    };\r\n    handleRowDel(textbook) {\r\n        var index = this.state.textbooks.indexOf(textbook);\r\n        axios.delete(`http://localhost:8000/api/recommended_textbooks/${this.state.textbooks[index].id}`).then((response) => {\r\n            console.log(response.data);\r\n            console.log(response.status);\r\n            console.log(response.statusText);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n          }, (error) => {\r\n            console.log(error.request);\r\n            console.log(error);\r\n          });\r\n        this.state.textbooks.splice(index, 1);\r\n        var temp_state = this.state.textbooks;\r\n        var arrayLength = temp_state.length;\r\n        for (var i = 0; i < arrayLength; i++) {\r\n          temp_state[i].id = i+1;\r\n        }\r\n    \r\n        this.setState(temp_state);     };\r\n\r\n    handleAddEvent(evt) {\r\n        var id = this.state.textbooks.length+1;\r\n        var textbook = {\r\n            id: id,\r\n            title: \"\",\r\n            author: \"\",\r\n            edition: \"\",\r\n            publisher: \"\",\r\n            course_outline_id:101,\r\n           \r\n        }\r\n        this.state.textbooks.push(textbook);\r\n        this.setState(this.state.textbooks);\r\n\r\n    }\r\n\r\n    handleTextBookTable(evt) {\r\n        var item = {\r\n            id: evt.target.id,\r\n            name: evt.target.name,\r\n            value: evt.target.value\r\n        };\r\n        var textbooks = this.state.textbooks.slice();\r\n        var newTextbooks = textbooks.map(function (textbook) {\r\n\r\n            for (var key in textbook) {\r\n                if (key == item.name && textbook.id == item.id) {\r\n                    textbook[key] = item.value;\r\n\r\n                }\r\n            }\r\n            return textbook;\r\n        });\r\n        this.setState({ textbooks: newTextbooks });\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <TextBookTable onTextBookTableUpdate={this.handleTextBookTable.bind(this)} onRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} textbooks={this.state.textbooks} filterText={this.state.filterText} />\r\n                <button className = 'button is-warning is-rounded is-medium' onClick={this.handleSend.bind(this)}>Update Form</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default TextBook\r\n\r\n\r\nclass TextBookTable extends React.Component {\r\n\r\n    render() {\r\n        var onTextBookTableUpdate = this.props.onTextBookTableUpdate;\r\n        var rowDel = this.props.onRowDel;\r\n        var filterText = this.props.filterText;\r\n        var textbook = this.props.textbooks.map(function (textbook) {\r\n            if (textbook.title.indexOf(filterText) === -1) {\r\n                return;\r\n            }\r\n            return (<TextbookRow onTextBookTableUpdate={onTextBookTableUpdate} textbook={textbook} onDelEvent={rowDel.bind(this)} key={textbook.id} />)\r\n        });\r\n        return (\r\n\r\n            <div className=\"columns is-max-desktop is-centered\">\r\n            <div>\r\n\r\n\r\n                <table className=\"table is-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Author</th>\r\n                            <th>Edition</th>\r\n                            <th>Publisher</th>\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {textbook}\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n                <button onClick={this.props.onRowAdd} className=\"button is-primary is-rounded\">Add New Row</button>\r\n            </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nclass TextbookRow extends React.Component {\r\n    onDelEvent() {\r\n        this.props.onDelEvent(this.props.textbook);\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <tr>\r\n\r\n                <TextBookEditableCell onTextBookTableUpdate={this.props.onTextBookTableUpdate} cellData={{\r\n                    type: \"title\",\r\n                    value: this.props.textbook.title,\r\n                    id: this.props.textbook.id\r\n                }} />\r\n                <TextBookEditableCell onTextBookTableUpdate={this.props.onTextBookTableUpdate} cellData={{\r\n                    type: \"author\",\r\n                    value: this.props.textbook.author,\r\n                    id: this.props.textbook.id\r\n                }} />\r\n                <TextBookEditableCell onTextBookTableUpdate={this.props.onTextBookTableUpdate} cellData={{\r\n                    type: \"edition\",\r\n                    value: this.props.textbook.edition,\r\n                    id: this.props.textbook.id\r\n                }} />\r\n\r\n                <TextBookEditableCell onTextBookTableUpdate={this.props.onTextBookTableUpdate} cellData={{\r\n                    type: \"publisher\",\r\n                    value: this.props.textbook.publisher,\r\n                    id: this.props.textbook.id\r\n                }} />\r\n\r\n<button onClick={this.onDelEvent.bind(this)}  className=\"button is-danger is-rounded\">Remove</button>\r\n            </tr>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nclass TextBookEditableCell extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <td>\r\n                <textarea class=\"textarea is-info\" rows=\"2\" name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onTextBookTableUpdate} />\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Examinations.js",["139","140","141","142","143","144"],"import \"bulma/css/bulma.css\";\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport \"./Components.css\";\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/examinations/\";\r\n\r\n  var arrayLength = state.examinations.length;\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    \r\n    axios.post(API_URL, state.examinations[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/examinations/${state.examinations[i].id}`, state.examinations[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\n\r\nclass Examinations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n    this.state.filterText = \"\";\r\n    this.state.examinations = [\r\n      {\r\n        id: 1,\r\n        course_outline_id: 101,\r\n        publicID: 1,\r\n        name: \"\",\r\n      },\r\n      {\r\n        id: 2,\r\n        course_outline_id: 101,\r\n        publicID: 2,\r\n        name: \"\",\r\n      },\r\n    ];\r\n    var API_URL = \"http://localhost:8000/api/examinations/\";\r\n    axios\r\n      .get(API_URL)\r\n      .then((res) => this.setState({ examinations: res.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.isClicked !== prevProps.isClicked || this.state.examinations.length< 1) {\r\n      var temp_state = {\r\n        filterText: \"\",\r\n        examinations: [\r\n          {\r\n            id: 1,\r\n            course_outline_id: 101,\r\n            publicID: 1,\r\n            name: \"\",\r\n          },\r\n        ],\r\n      };\r\n      this.setState(temp_state);\r\n      console.log(update_Django(temp_state));\r\n    }\r\n  }\r\n\r\n  handleUserInput(filterText) {\r\n    this.setState({ filterText: filterText });\r\n  }\r\n\r\n  handleSend(evt) {\r\n    console.log(this.state.examinations);\r\n    console.log(update_Django(this.state));\r\n\r\n  }\r\n\r\n  handleRowDel(examinations) {\r\n    var index = this.state.examinations.indexOf(examinations);\r\n    axios\r\n      .delete(\r\n        `http://localhost:8000/api/examinations/${this.state.examinations[index].id}`\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          console.log(response.status);\r\n          console.log(response.statusText);\r\n          console.log(response.headers);\r\n          console.log(response.config);\r\n        },\r\n        (error) => {\r\n          console.log(error.request);\r\n          console.log(error);\r\n        }\r\n      );\r\n    this.state.examinations.splice(index, 1);\r\n\r\n    var temp_state = this.state.examinations\r\n    var arrayLength = temp_state.length;\r\n    for (var i = 0; i < arrayLength; i++) {\r\n      temp_state[i].id = i+1;\r\n      temp_state[i].publicID = i+1;\r\n    }\r\n\r\n    this.setState(temp_state);\r\n  }\r\n\r\n  handleAddEvent(evt) {\r\n    var id = 1 + this.state.examinations.length;\r\n    var examinations = {\r\n      id: id,\r\n      course_outline_id: 101,\r\n      name: \"\",\r\n      publicID: id,\r\n    };\r\n    this.state.examinations.push(examinations);\r\n    this.setState(this.state.examinations);\r\n  }\r\n\r\n  handleExaminationTable(evt) {\r\n    var item = {\r\n      id: evt.target.id,\r\n      name: evt.target.name,\r\n      value: evt.target.value,\r\n    };\r\n    var examinations = this.state.examinations.slice();\r\n    var newExaminations = examinations.map(function (examinations) {\r\n      for (var key in examinations) {\r\n        if (key == item.name && examinations.id == item.id) {\r\n          examinations[key] = item.value;\r\n        }\r\n      }\r\n      return examinations;\r\n    });\r\n    this.setState({ examinations: newExaminations });\r\n    //  console.log(this.state.examinations);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ExaminationTable\r\n          onExaminationTableUpdate={this.handleExaminationTable.bind(this)}\r\n          onExaminationRowAdd={this.handleAddEvent.bind(this)}\r\n          onRowDel={this.handleRowDel.bind(this)}\r\n          examinations={this.state.examinations}\r\n          filterText={this.state.filterText}\r\n        />\r\n        <button\r\n          className=\"button is-warning is-rounded is-medium\"\r\n          onClick={this.handleSend.bind(this)}\r\n        >\r\n          Update Form\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ExaminationTable extends React.Component {\r\n  render() {\r\n    var onExaminationTableUpdate = this.props.onExaminationTableUpdate;\r\n    var rowDel = this.props.onRowDel;\r\n    var filterText = this.props.filterText;\r\n    var examinations = this.props.examinations.map(function (examinations) {\r\n      if (examinations.name.indexOf(filterText) === -1) {\r\n        return;\r\n      }\r\n      return (\r\n        <ExaminationRow\r\n          onExaminationTableUpdate={onExaminationTableUpdate}\r\n          examinations={examinations}\r\n          onDelEvent={rowDel.bind(this)}\r\n          key={examinations.id}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"columns is-centered\">\r\n        <div>\r\n          <table className=\"table is-bordered\">\r\n            <thead>\r\n              <th>#</th>\r\n              <th>Examination Info</th>\r\n            </thead>\r\n\r\n            <tbody>{examinations}</tbody>\r\n          </table>\r\n          <button\r\n            onClick={this.props.onExaminationRowAdd}\r\n            className=\"button is-primary is-rounded\"\r\n          >\r\n            Add New Row\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ExaminationRow extends React.Component {\r\n  onDelEvent() {\r\n    this.props.onDelEvent(this.props.examinations);\r\n  }\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <ExaminationsEditableCellNumbers\r\n          onExaminationTableUpdate={this.props.onExaminationTableUpdate}\r\n          cellData={{\r\n            type: \"publicID\",\r\n            value: this.props.examinations.publicID,\r\n            id: this.props.examinations.id,\r\n          }}\r\n        />\r\n        <ExaminationsEditableCell\r\n          onExaminationTableUpdate={this.props.onExaminationTableUpdate}\r\n          cellData={{\r\n            type: \"name\",\r\n            value: this.props.examinations.name,\r\n            id: this.props.examinations.id,\r\n          }}\r\n        />\r\n        <td className=\"del-cell\">\r\n          <button\r\n            onClick={this.onDelEvent.bind(this)}\r\n            className=\"button is-danger is-rounded\"\r\n          >\r\n            Remove\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\nclass ExaminationsEditableCell extends React.Component {\r\n  render() {\r\n    return (\r\n      <td>\r\n        <textarea\r\n          class=\"textarea is-info is-large\"\r\n          rows=\"2\"\r\n          name={this.props.cellData.type}\r\n          id={this.props.cellData.id}\r\n          value={this.props.cellData.value}\r\n          onChange={this.props.onExaminationTableUpdate}\r\n        />\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass ExaminationsEditableCellNumbers extends React.Component {\r\n  render() {\r\n    return (\r\n      <td>\r\n        <input\r\n          type=\"number\"\r\n          name={this.props.cellData.type}\r\n          id={this.props.cellData.id}\r\n          value={this.props.cellData.value}\r\n          onChange={this.props.onExaminationTableUpdate}\r\n        />\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Examinations;\r\n\r\n/*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\GraduateAttributesTable.js",["145","146","147","148","149","150"],"import 'bulma/css/bulma.css';\r\nimport React, { useState, useEffect , Component} from 'react'\r\nimport './Components.css';\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/graduate_attributes/\";\r\n\r\n  var arrayLength = state.attributes.length;\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    console.log(state.attributes[i]);\r\n    \r\n    axios.post(API_URL, state.attributes[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/graduate_attributes/${state.attributes[i].id}`, state.attributes[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\nclass GraduateAttributesTable extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {};\r\n      this.state.filterText = \"\";\r\n      this.state.attributes = [\r\n        {\r\n          id: 1,\r\n          publicID: 1,\r\n          grad: '',\r\n          instruct: '',\r\n          course_outline_id: 101,\r\n        },\r\n      ];\r\n      var API_URL = \"http://localhost:8000/api/graduate_attributes/\";\r\n      axios\r\n      .get(API_URL)\r\n      .then(res => this.setState({ attributes: res.data }))\r\n      .catch(err => console.log(err));\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if(this.props.isClicked !== prevProps.isClicked || this.state.attributes.length< 1){\r\n         this.setState({\r\n          filterText : '',\r\n          attributes:[\r\n            {\r\n              id: 1,\r\n              publicID: 1,\r\n              grad: '',\r\n              instruct: '',\r\n              course_outline_id: 101,\r\n            }\r\n          ]\r\n       });\r\n        console.log(update_Django(this.state));\r\n      }\r\n    }\r\n\r\n    handleUserInput(filterText) {\r\n      this.setState({filterText: filterText});\r\n    };\r\n    handleRowDel(attribute) {\r\n      var index = this.state.attributes.indexOf(attribute);\r\n      axios.delete(`http://localhost:8000/api/graduate_attributes/${this.state.attributes[index].id}`).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n      this.state.attributes.splice(index, 1);\r\n\r\n      var temp_state = this.state.attributes;\r\n      var arrayLength = temp_state.length;\r\n      for (var i = 0; i < arrayLength; i++) {\r\n        temp_state[i].id = i+1;\r\n        temp_state[i].publicID = i+1;\r\n      }\r\n  \r\n      this.setState(temp_state);\r\n    };\r\n  \r\n    handleAddEvent(evt) {\r\n      var id = 1+this.state.attributes.length;\r\n      var attribute = {\r\n        id: id,\r\n        publicID: id,\r\n        grad: '',\r\n        instruct: '',\r\n        course_outline_id: 101,\r\n\r\n      }\r\n      this.state.attributes.push(attribute);\r\n      this.setState(this.state.attributes);\r\n  \r\n    }\r\n\r\n    handleSend(evt){\r\n      console.log(this.state.attributes);\r\n      console.log(update_Django(this.state));\r\n\r\n    }\r\n  \r\n    handleAttributesTable(evt) {\r\n      var item = {\r\n        id: evt.target.id,\r\n        name: evt.target.name,\r\n        value: evt.target.value\r\n      };\r\n  var attributes = this.state.attributes.slice();\r\n    var newAttributes = attributes.map(function(attribute) {\r\n  \r\n      for (var key in attribute) {\r\n        if (key == item.name && attribute.id == item.id) {\r\n          attribute[key] = item.value;\r\n  \r\n        }\r\n      }\r\n      return attribute;\r\n    });\r\n      this.setState({attributes:newAttributes});\r\n    //  console.log(this.state.attributes);\r\n    };\r\n    render() {\r\n  \r\n      return (\r\n        <div>\r\n          <AttributesTable onAttributesTableUpdate={this.handleAttributesTable.bind(this)} onAttributesRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} attributes={this.state.attributes} filterText={this.state.filterText}/>\r\n          <button className = 'button is-warning is-rounded is-medium' onClick={this.handleSend.bind(this)}>Update Form</button>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n  class AttributesTable extends React.Component {\r\n  \r\n    render() {\r\n      var onAttributesTableUpdate = this.props.onAttributesTableUpdate;\r\n      var rowDel = this.props.onRowDel;\r\n      var filterText = this.props.filterText;\r\n      var attribute = this.props.attributes.map(function(attribute) {\r\n        if (attribute.grad.indexOf(filterText) === -1) {\r\n          return;\r\n        }\r\n        return (<AttributesRow onAttributesTableUpdate={onAttributesTableUpdate} attribute={attribute} onDelEvent={rowDel.bind(this)} key={attribute.id}/>)\r\n      });\r\n      return (\r\n        <div className=\"columns is-max-desktop is-centered\">\r\n        <div>\r\n  \r\n  \r\n          <table className=\"table is-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Graduate Attribute</th>\r\n                <th>Instruction Level</th>\r\n\r\n              </tr>\r\n            </thead>\r\n  \r\n            <tbody>\r\n              {attribute}\r\n  \r\n            </tbody>\r\n  \r\n          </table>\r\n          <button onClick={this.props.onAttributesRowAdd} className=\"button is-primary is-rounded\">Add New</button>\r\n  \r\n        </div>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  class AttributesRow extends React.Component {\r\n    onDelEvent() {\r\n      this.props.onDelEvent(this.props.attribute);\r\n  \r\n    }\r\n    render() {\r\n  \r\n      return (\r\n        <tr>\r\n          <AttributesEditableCellNumbers onAttributesTableUpdate={this.props.onAttributesTableUpdate} cellData={{\r\n            type: \"publicID\",\r\n            value: this.props.attribute.publicID,\r\n            id: this.props.attribute.id\r\n          }}/>\r\n          <AttributesEditableCell onAttributesTableUpdate={this.props.onAttributesTableUpdate} cellData={{\r\n            type: \"grad\",\r\n            value: this.props.attribute.grad,\r\n            id: this.props.attribute.id\r\n          }}/>\r\n            <AttributesEditableCell onAttributesTableUpdate={this.props.onAttributesTableUpdate} cellData={{\r\n            type: \"instruct\",\r\n            value: this.props.attribute.instruct,\r\n            id: this.props.attribute.id\r\n          }}/>\r\n          <td className=\"del-cell\">\r\n          <button onClick={this.onDelEvent.bind(this)} className=\"button is-danger is-rounded is-fullwidth\">Remove</button>\r\n          </td>\r\n        </tr>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  class AttributesEditableCell extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <textarea class=\"textarea is-info is-large\" rows=\"2\" name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onAttributesTableUpdate}/>\r\n        </td>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n  class AttributesEditableCellNumbers extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <input type='number' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onAttributesTableUpdate}/>\r\n        </td>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default GraduateAttributesTable\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n   /*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Calendar.js",["151","152","153"],"import \"bulma/css/bulma.css\";\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport \"./Components.css\";\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/calendar_information/\";\r\n  axios.post(API_URL, state).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/calendar_information/${state.id}`, state).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\n\r\nclass Calendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var API_URL = \"http://localhost:8000/api/calendar_information/\";\r\n\r\n    this.state = {\r\n      id: 1,\r\n      num: '',\r\n      course_name: \"\",\r\n      description: \"\",\r\n      hours: \"\",\r\n      credit: \"\",\r\n      link: \"\",\r\n      course_outline_id:101,\r\n    };\r\n    axios\r\n    .get(API_URL)\r\n    .then(res => {\r\n        this.setState(res.data[0]);  \r\n      })\r\n    .catch(err => console.log(err));   \r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.isClicked !== prevProps.isClicked){\r\n       this.setState({\r\n       id: 1,\r\n       num: '',\r\n       course_name: \"\",\r\n       description: \"\",\r\n       hours: \"\",\r\n       credit: \"\",\r\n       link: \"\",\r\n       course_outline_id:101,\r\n\r\n     });\r\n    //  console.log(update_Django(this.state));\r\n\r\n    }    \r\n   }\r\n\r\n  handleClick = () => {\r\n    console.log(this.state);\r\n    console.log(update_Django(this.state));\r\n\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"field has-addons\">\r\n          <div class=\"control\">\r\n            <textarea\r\n              class=\"textarea is-info\"\r\n              placeholder=\"Enter Course Number\"\r\n              rows=\"1\"\r\n              name=\"num\"\r\n              value={this.state.num}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <textarea\r\n            class=\"textarea is-info\"\r\n            placeholder=\"Enter Course Name\"\r\n            rows=\"1\"\r\n            name=\"course_name\"\r\n            value={this.state.course_name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <textarea\r\n            class=\"textarea is-info\"\r\n            placeholder=\"Enter Course descriptionion\"\r\n            rows=\"4\"\r\n            name=\"description\"\r\n            value={this.state.description}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field has-addons\">\r\n          <div class=\"control\">\r\n            <input\r\n              class=\"input is-primary\"\r\n              type=\"text\"\r\n              placeholder=\"Course Hours\"\r\n              name=\"hours\"\r\n              value={this.state.hours}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"field has-addons\">\r\n          <div class=\"control\">\r\n            <input\r\n              class=\"input is-primary\"\r\n              type=\"text\"\r\n              name=\"credit\"\r\n              value={this.state.credit}\r\n              placeholder=\"Academic credit\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"field has-addons\">\r\n          <div class=\"control\">\r\n            <input\r\n              class=\"input is-primary\"\r\n              type=\"text\"\r\n              placeholder=\"Calendar Link\"\r\n              name=\"link\"\r\n              value={this.state.link}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          onClick={this.handleClick}\r\n          className=\"button is-warning is-rounded is-medium\"\r\n        >\r\n          Update Form\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Calendar;\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Calculator.js",["154","155","156"],"import 'bulma/css/bulma.css';\r\nimport React, { useState, useEffect , Component} from 'react'\r\nimport './Components.css';\r\nimport axios from \"axios\";\r\n\r\n\r\nasync function update_Django_backend(state) {\r\n    var API_URL = \"http://localhost:8000/api/calculator_use/\";\r\n    axios.post(API_URL, state).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n      \r\n      //may somehow get away with doing it without duplicates\r\n      axios.put(`http://localhost:8000/api/calculator_use/${state.id}`, state).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async function update_Django(state) {\r\n    const response = await update_Django_backend(state);\r\n    return response;\r\n  }\r\n\r\nclass Calculator extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      var API_URL = \"http://localhost:8000/api/calculator_use/\";\r\n\r\n      this.state = {\r\n        id: 1,\r\n        notes: \"\",\r\n        course_outline_id: 101,\r\n      };\r\n\r\n      axios\r\n      .get(API_URL)\r\n      .then(res => {\r\n          this.setState(res.data[0]);  \r\n        })\r\n      .catch(err => console.log(err));   \r\n\r\n\r\n    }\r\n    componentDidUpdate(prevProps){\r\n      if(this.props.isClicked !== prevProps.isClicked){\r\n         this.setState({\r\n          id: 1,\r\n          notes: \"\",\r\n          course_outline_id: 101,\r\n       });\r\n       //console.log(update_Django(this.state));\r\n      }\r\n     }\r\n\r\n\r\n\r\nhandleClick=()=>{\r\n    console.log(this.state);\r\n    console.log(update_Django(this.state));\r\n\r\n}\r\n\r\nhandleChange = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n}\r\n\r\nrender(){\r\n   \r\n    return(\r\n        <div class=\"columns is-mobile is-centered\">\r\n        <div class=\"column is-half\">\r\n        <div>\r\n            \r\n            <div class=\"control\">\r\n                    <textarea\r\n                      class=\"textarea is-info is\"\r\n                      placeholder=\"Enter Calculator Rules\"\r\n                      rows=\"4\"\r\n                      name = 'notes'\r\n                      value = {this.state.notes}\r\n                      onChange={this.handleChange}\r\n                      />\r\n                  </div>\r\n                         \r\n\r\n                <button onClick={this.handleClick} className=\"button is-warning is-rounded is-medium\">Update Form</button>\r\n\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\nexport default Calculator","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Policies.js",["157","158","159"],"import \"bulma/css/bulma.css\";\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport \"./Components.css\";\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/policies/\";\r\n  axios.post(API_URL, state).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/policies/${state.id}`, state).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\nclass Policies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var API_URL = \"http://localhost:8000/api/policies/\";\r\n\r\n    this.state = {\r\n      id: 1,\r\n      notes: \"\",\r\n      course_outline_id:101,\r\n    };\r\n    axios\r\n    .get(API_URL)\r\n    .then(res => {\r\n        this.setState(res.data[0]);  \r\n      })\r\n    .catch(err => console.log(err));   \r\n\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.isClicked !== prevProps.isClicked){\r\n       this.setState({\r\n        id: 1,\r\n        notes: \"\",\r\n        course_outline_id:101,\r\n     });\r\n    //  console.log(update_Django(this.state));\r\n    }\r\n   }\r\n\r\n  handleClick = () => {\r\n    console.log(this.state);\r\n    console.log(update_Django(this.state));\r\n\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"columns is-mobile is-centered\">\r\n        <div class=\"column is-half\">\r\n          <div>\r\n            <div class=\"control\">\r\n              <textarea\r\n                class=\"textarea is-info\"\r\n                placeholder=\"Enter Course Policies\"\r\n                rows=\"6\"\r\n                name=\"notes\"\r\n                value={this.state.notes}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              onClick={this.handleClick}\r\n              className=\"button is-warning is-rounded is-medium\"\r\n            >\r\n              Update Form\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Policies;\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Notes.js",["160","161","162"],"import \"bulma/css/bulma.css\";\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport \"./Components.css\";\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/notes/\";\r\n  axios.post(API_URL, state).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/notes/${state.id}`, state).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\nclass Notes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var API_URL = \"http://localhost:8000/api/notes/\";\r\n\r\n    this.state = {\r\n      id: 1,\r\n      note: \"\",\r\n      course_outline_id:101,\r\n    };\r\n    axios\r\n    .get(API_URL)\r\n    .then(res => {\r\n        this.setState(res.data[0]);  \r\n      })\r\n    .catch(err => console.log(err));   \r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.isClicked !== prevProps.isClicked){\r\n       this.setState({\r\n        id: 1,\r\n        note: \"\",\r\n        course_outline_id:101,\r\n     });\r\n    //  console.log(update_Django(this.state));\r\n    }\r\n   }\r\n\r\n  handleClick = () => {\r\n    console.log(this.state);\r\n    console.log(update_Django(this.state));\r\n\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div class=\"columns is-mobile is-centered\">\r\n        <div class=\"column is-half\">\r\n      <div>\r\n          <div className=\"control\">\r\n            <textarea\r\n              class=\"textarea is-info\"\r\n              placeholder=\"Enter notes about additional pass-requirements, sickness exemptions, or grade conversion scale (below)\"\r\n              rows=\"6\"\r\n              name=\"note\"\r\n              value={this.state.note}\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n      \r\n        <button\r\n          onClick={this.handleClick}\r\n          className=\"button is-warning is-rounded is-medium\"\r\n        >\r\n          Update Form\r\n        </button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Notes;\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Collapsible.js",["163","164","165"],"\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport \"./Components.css\";\r\nimport bulmaCollapsible from '@creativebulma/bulma-collapsible';\r\nimport CourseObjectives from \"./CourseObjectives.js\";\r\nimport Calendar from \"./Calendar\";\r\nimport GraduateAttributesTable from \"./GraduateAttributesTable\";\r\nimport Sections from \"./Sections\";\r\nimport CourseInstructors from \"./CourseInstructors\";\r\nimport Calculator from \"./Calculator\";\r\nimport Examinations from \"./Examinations\";\r\nimport FinalGradeDeterminations from \"./FinalGradeDetermination\";\r\nimport Notes from \"./Notes\";\r\nimport GPAConversions from \"./GPAConversions\";\r\nimport TextBook from \"./TextBook\";\r\nimport ReqTextBook from \"./ReqTextBook\";\r\nimport Policies from \"./Policies\";\r\nimport Coordinator from \"./Coordinator\";\r\nimport TA from \"./TA\";\r\n\r\nclass Collapsible extends React.Component {\r\n    componentDidMount() {\r\n      this.collapsibles = bulmaCollapsible.attach(\".is-collapsible\", {\r\n        container: this.refs.collapsibles\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div ref=\"collapsibles\" id=\"accordion_first\">\r\n          <article className=\"message is-danger is-medium\">\r\n            <div className=\"message-header\">\r\n              \r\n                Calendar Information{\" \"}\r\n                <p>\r\n                <a href=\"#collapsible-message-accordion-1\" data-action=\"collapse\">\r\n                  Collapse/Expand\r\n                </a>\r\n              </p>\r\n            </div>\r\n            <div\r\n              id=\"collapsible-message-accordion-1\"\r\n              className=\"message-body is-collapsible\"\r\n              data-parent=\"accordion_first\"\r\n            >\r\n              <div className=\"message-body-content\">\r\n\r\n                <Calendar isClicked ={this.props.isClicked}/>\r\n               \r\n              </div>\r\n            </div>\r\n          </article>\r\n\r\n          <article className=\"message is-warning is-medium\">\r\n          <div className=\"message-header\">\r\n            \r\n              Learning Outcomes{\" \"}\r\n              <p>\r\n              <a href=\"#collapsible-message-accordion-2\" data-action=\"collapse\">\r\n                Collapse/Expand\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div\r\n            id=\"collapsible-message-accordion-2\"\r\n            className=\"message-body is-collapsible\"\r\n            data-parent=\"accordion_first\"\r\n          >\r\n            <div className=\"message-body-content\">\r\n            <div class=\"container\">\r\n               \r\n                <h2 class=\"title2\">Course Objectives</h2>\r\n\r\n                    <CourseObjectives isClicked ={this.props.isClicked} />\r\n              \r\n\r\n                <h3 class=\"title2\">Graduate Attributes</h3>\r\n\r\n              \r\n                    <GraduateAttributesTable isClicked ={this.props.isClicked} />\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n\r\n        <article className=\"message is-danger is-medium\">\r\n          <div className=\"message-header\">\r\n            \r\n              Timetable{\" \"}\r\n              <p>\r\n              <a href=\"#collapsible-message-accordion-3\" data-action=\"collapse\">\r\n                Collapse/Expand\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div\r\n            id=\"collapsible-message-accordion-3\"\r\n            className=\"message-body is-collapsible\"\r\n            data-parent=\"accordion_first\"\r\n          >\r\n            <div className=\"message-body-content\">\r\n            <div class=\"container\">\r\n            <h1 class=\"title2\">Timetable</h1>\r\n              \r\n\r\n                    <Sections isClicked ={this.props.isClicked}/>\r\n              \r\n\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n\r\n \r\n        <article className=\"message is-warning is-medium\">\r\n          <div className=\"message-header\">\r\n            \r\n              Course Instructors{\" \"}\r\n              <p>\r\n              <a href=\"#collapsible-message-accordion-4\" data-action=\"collapse\">\r\n                Collapse/Expand\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div\r\n            id=\"collapsible-message-accordion-4\"\r\n            className=\"message-body is-collapsible\"\r\n            data-parent=\"accordion_first\"\r\n          >\r\n            <div className=\"message-body-content\">\r\n            <div class=\"container\">\r\n            <h1 class=\"title2\">Instructors</h1>\r\n              \r\n\r\n                    <CourseInstructors isClicked ={this.props.isClicked}/>\r\n                    <h2 class=\"title2\">Teaching Assistants</h2>\r\n                    <TA isClicked ={this.props.isClicked}/>\r\n                    <h2 class=\"title2\">Course Coordinators</h2>\r\n                    <Coordinator isClicked ={this.props.isClicked}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n\r\n        <article className=\"message is-danger is-medium\">\r\n          <div className=\"message-header\">\r\n            \r\n              Examinations{\" \"}\r\n              <p>\r\n              <a href=\"#collapsible-message-accordion-5\" data-action=\"collapse\">\r\n                Collapse/Expand\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div\r\n            id=\"collapsible-message-accordion-5\"\r\n            className=\"message-body is-collapsible\"\r\n            data-parent=\"accordion_first\"\r\n          >\r\n            <div className=\"message-body-content\">\r\n            <div class=\"container\">\r\n           \r\n           \r\n            <h2 class=\"title2\">Examinations</h2>\r\n\r\n                    <Examinations isClicked ={this.props.isClicked}/>\r\n                    <h2 class=\"title2\">Use of Calculators in Examinations</h2>\r\n                    <Calculator isClicked ={this.props.isClicked}/>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n\r\n        <article className=\"message is-warning is-medium\">\r\n          <div className=\"message-header\">\r\n            \r\n              Grade Determination{\" \"}\r\n              <p>\r\n              <a href=\"#collapsible-message-accordion-6\" data-action=\"collapse\">\r\n                Collapse/Expand\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div\r\n            id=\"collapsible-message-accordion-6\"\r\n            className=\"message-body is-collapsible\"\r\n            data-parent=\"accordion_first\"\r\n          >\r\n            <div className=\"message-body-content\">\r\n            <div class=\"container\">\r\n\r\n            \r\n            <h2 class=\"title2\">Grade Determination</h2>\r\n\r\n                    <FinalGradeDeterminations isClicked ={this.props.isClicked}/>\r\n                    <h2 class=\"title2\">Extra Notes</h2>\r\n                    <Notes isClicked ={this.props.isClicked}/>\r\n                    <h2 class=\"title2\">GPA Conversions</h2>\r\n                    <GPAConversions isClicked ={this.props.isClicked}/>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n\r\n\r\n        <article className=\"message is-danger is-medium\">\r\n          <div className=\"message-header\">\r\n            \r\n              Textbooks{\" \"}\r\n              <p>\r\n              <a href=\"#collapsible-message-accordion-7\" data-action=\"collapse\">\r\n                Collapse/Expand\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div\r\n            id=\"collapsible-message-accordion-7\"\r\n            className=\"message-body is-collapsible\"\r\n            data-parent=\"accordion_first\"\r\n          >\r\n            <div className=\"message-body-content\">\r\n            <div class=\"container\">\r\n     \r\n           \r\n            <h2 class=\"title2\">Required Textbooks</h2>\r\n\r\n                    <ReqTextBook isClicked ={this.props.isClicked}/>\r\n                    <h2 class=\"title2\">Recommended Textbooks</h2>\r\n                    <TextBook isClicked ={this.props.isClicked}/>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n\r\n        <article className=\"message is-warning is-medium\">\r\n          <div className=\"message-header\">\r\n            \r\n              Policies{\" \"}\r\n              <p>\r\n              <a href=\"#collapsible-message-accordion-8\" data-action=\"collapse\">\r\n                Collapse/Expand\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div\r\n            id=\"collapsible-message-accordion-8\"\r\n            className=\"message-body is-collapsible\"\r\n            data-parent=\"accordion_first\"\r\n          >\r\n            <div className=\"message-body-content\">\r\n            <div class=\"container\">\r\n           \r\n            <h2 class=\"title2\">Course Policies</h2>\r\n\r\n                    <Policies isClicked ={this.props.isClicked}/>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n\r\n          \r\n      \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  export default Collapsible;","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\ReqTextBook.js",["166","167","168","169","170","171"],"import 'bulma/css/bulma.css';\r\nimport React, { useState, useEffect, Component } from 'react'\r\nimport './Components.css';\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n    var API_URL = \"http://localhost:8000/api/required_textbooks/\";\r\n\r\n    var arrayLength = state.textbooks.length;\r\n    for (var i = 0; i < arrayLength; i++) {\r\n      \r\n      axios.post(API_URL, state.textbooks[i]).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n      \r\n      //may somehow get away with doing it without duplicates\r\n      axios.put(`http://localhost:8000/api/required_textbooks/${state.textbooks[i].id}`, state.textbooks[i]).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n  }\r\n  }\r\n  \r\n  async function update_Django(state) {\r\n    const response = await update_Django_backend(state);\r\n    return response;\r\n  }\r\n\r\n\r\nclass ReqTextBook extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.filterText = \"\";\r\n        this.state.textbooks = [\r\n            {\r\n                id: 1,\r\n                title: '',\r\n                author: '',\r\n                edition: '',\r\n                publisher: '',\r\n                course_outline_id:101,\r\n            },\r\n        ];\r\n        var API_URL = \"http://localhost:8000/api/required_textbooks/\";\r\n        axios\r\n        .get(API_URL)\r\n        .then(res => this.setState({ textbooks: res.data }))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.isClicked !== prevProps.isClicked || this.state.textbooks.length< 1){\r\n           this.setState({\r\n            filterText : '',\r\n            textbooks:[\r\n              {\r\n                id: 1,\r\n                title: '',\r\n                author: '',\r\n                edition: '',\r\n                publisher: '',\r\n                course_outline_id:101,\r\n              }\r\n            ]\r\n         });\r\n          console.log(update_Django(this.state));\r\n        }\r\n      }\r\n\r\n    handleSend(evt){\r\n        console.log(this.state.textbooks);\r\n        console.log(update_Django(this.state));\r\n\r\n      }\r\n\r\n    handleUserInput(filterText) {\r\n        this.setState({ filterText: filterText });\r\n    };\r\n    handleRowDel(textbook) {\r\n        var index = this.state.textbooks.indexOf(textbook);\r\n        axios.delete(`http://localhost:8000/api/required_textbooks/${this.state.textbooks[index].id}`).then((response) => {\r\n            console.log(response.data);\r\n            console.log(response.status);\r\n            console.log(response.statusText);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n          }, (error) => {\r\n            console.log(error.request);\r\n            console.log(error);\r\n          });\r\n        this.state.textbooks.splice(index, 1);\r\n        var temp_state = this.state.textbooks;\r\n        var arrayLength = temp_state.length;\r\n        for (var i = 0; i < arrayLength; i++) {\r\n          temp_state[i].id = i+1;\r\n        }\r\n    \r\n        this.setState(temp_state);    \r\n    };\r\n\r\n    handleAddEvent(evt) {\r\n        var id = this.state.textbooks.length+1;\r\n        var textbook = {\r\n            id: id,\r\n            title: \"\",\r\n            author: \"\",\r\n            edition: \"\",\r\n            publisher: \"\",\r\n            course_outline_id:101,\r\n           \r\n        }\r\n        this.state.textbooks.push(textbook);\r\n        this.setState(this.state.textbooks);\r\n\r\n    }\r\n\r\n    handleTextBookTable(evt) {\r\n        var item = {\r\n            id: evt.target.id,\r\n            name: evt.target.name,\r\n            value: evt.target.value\r\n        };\r\n        var textbooks = this.state.textbooks.slice();\r\n        var newTextbooks = textbooks.map(function (textbook) {\r\n\r\n            for (var key in textbook) {\r\n                if (key == item.name && textbook.id == item.id) {\r\n                    textbook[key] = item.value;\r\n\r\n                }\r\n            }\r\n            return textbook;\r\n        });\r\n        this.setState({ textbooks: newTextbooks });\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <TextBookTable onTextBookTableUpdate={this.handleTextBookTable.bind(this)} onRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} textbooks={this.state.textbooks} filterText={this.state.filterText} />\r\n                <button className = 'button is-warning is-rounded is-medium' onClick={this.handleSend.bind(this)}>Update Form</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default ReqTextBook\r\n\r\n\r\nclass TextBookTable extends React.Component {\r\n\r\n    render() {\r\n        var onTextBookTableUpdate = this.props.onTextBookTableUpdate;\r\n        var rowDel = this.props.onRowDel;\r\n        var filterText = this.props.filterText;\r\n        var textbook = this.props.textbooks.map(function (textbook) {\r\n            if (textbook.title.indexOf(filterText) === -1) {\r\n                return;\r\n            }\r\n            return (<TextbookRow onTextBookTableUpdate={onTextBookTableUpdate} textbook={textbook} onDelEvent={rowDel.bind(this)} key={textbook.id} />)\r\n        });\r\n        return (\r\n\r\n            <div className=\"columns is-max-desktop is-centered\">\r\n            <div>\r\n\r\n\r\n                <table className=\"table is-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Author</th>\r\n                            <th>Edition</th>\r\n                            <th>Publisher</th>\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {textbook}\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n                <button onClick={this.props.onRowAdd} className=\"button is-primary is-rounded\">Add New Row</button>\r\n            </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nclass TextbookRow extends React.Component {\r\n    onDelEvent() {\r\n        this.props.onDelEvent(this.props.textbook);\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <tr>\r\n\r\n                <TextBookEditableCell onTextBookTableUpdate={this.props.onTextBookTableUpdate} cellData={{\r\n                    type: \"title\",\r\n                    value: this.props.textbook.title,\r\n                    id: this.props.textbook.id\r\n                }} />\r\n                <TextBookEditableCell onTextBookTableUpdate={this.props.onTextBookTableUpdate} cellData={{\r\n                    type: \"author\",\r\n                    value: this.props.textbook.author,\r\n                    id: this.props.textbook.id\r\n                }} />\r\n                <TextBookEditableCell onTextBookTableUpdate={this.props.onTextBookTableUpdate} cellData={{\r\n                    type: \"edition\",\r\n                    value: this.props.textbook.edition,\r\n                    id: this.props.textbook.id\r\n                }} />\r\n\r\n                <TextBookEditableCell onTextBookTableUpdate={this.props.onTextBookTableUpdate} cellData={{\r\n                    type: \"publisher\",\r\n                    value: this.props.textbook.publisher,\r\n                    id: this.props.textbook.id\r\n                }} />\r\n\r\n<button onClick={this.onDelEvent.bind(this)}  className=\"button is-danger is-rounded\">Remove</button>\r\n            </tr>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nclass TextBookEditableCell extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <td>\r\n                <textarea class=\"textarea is-info\" rows=\"2\" name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onTextBookTableUpdate} />\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\TA.js",["172","173","174","175","176","177"],"import 'bulma/css/bulma.css';\r\nimport React, { useState, useEffect , Component} from 'react'\r\nimport './Components.css';\r\nimport axios from \"axios\";\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/teaching_assistants/\";\r\n\r\n  var arrayLength = state.instructors.length;\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    \r\n    axios.post(API_URL, state.instructors[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/teaching_assistants/${state.instructors[i].id}`, state.instructors[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\nclass TA extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {};\r\n      this.state.filterText = \"\";\r\n      this.state.instructors = [\r\n        {\r\n          id: 1,\r\n          course_outline_id: 101,\r\n          section: '',\r\n          fname: '',\r\n          lname: '',\r\n          phone: '',\r\n          office: '',\r\n          email: '',\r\n        },\r\n     \r\n      ];\r\n      var API_URL = \"http://localhost:8000/api/teaching_assistants/\";\r\n      axios\r\n      .get(API_URL)\r\n      .then(res => this.setState({ instructors: res.data }))\r\n      .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if(this.props.isClicked !== prevProps.isClicked || this.state.instructors.length< 1){\r\n         this.setState({\r\n          filterText : '',\r\n          instructors:[\r\n            {\r\n              id: 1,\r\n              course_outline_id: 101,\r\n              section: '',\r\n              fname: '',\r\n              lname: '',\r\n              phone: '',\r\n              office: '',\r\n              email: '',\r\n            }\r\n          ]\r\n       });\r\n        console.log(update_Django(this.state));\r\n      }\r\n    }\r\n\r\n\r\n\r\n    handleUserInput(filterText) {\r\n      this.setState({filterText: filterText});\r\n    };\r\n    handleRowDel(instructor) {\r\n      var index = this.state.instructors.indexOf(instructor);\r\n      axios.delete(`http://localhost:8000/api/teaching_assistants/${this.state.instructors[index].id}`).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n\r\n      this.state.instructors.splice(index, 1);\r\n      var temp_state = this.state.instructors;\r\n      var arrayLength = temp_state.length;\r\n      for (var i = 0; i < arrayLength; i++) {\r\n        temp_state[i].id = i+1;\r\n      }\r\n  \r\n      this.setState(temp_state);  \r\n    };\r\n\r\n    handleSend(evt){\r\n      console.log(this.state.instructors);\r\n      console.log(update_Django(this.state));\r\n    }\r\n  \r\n    handleAddEvent(evt) {\r\n      var id = this.state.instructors.length + 1;\r\n      var instructor = {\r\n        id: id,\r\n        course_outline_id: 101,\r\n        section: '',\r\n        fname: '',\r\n        lname: '',\r\n        phone: '',\r\n        office: '',\r\n        email: '',\r\n      }\r\n      this.state.instructors.push(instructor);\r\n      this.setState(this.state.instructors);\r\n  \r\n    }\r\n  \r\n    handleInstructorsTable(evt) {\r\n      var item = {\r\n        id: evt.target.id,\r\n        name: evt.target.name,\r\n        value: evt.target.value\r\n      };\r\n  var instructors = this.state.instructors.slice();\r\n    var newinstructors = instructors.map(function(instructor) {\r\n  \r\n      for (var key in instructor) {\r\n        if (key == item.name && instructor.id == item.id) {\r\n          instructor[key] = item.value;\r\n  \r\n        }\r\n      }\r\n      return instructor;\r\n    });\r\n      this.setState({instructors:newinstructors});\r\n    //  console.log(this.state.instructors);\r\n    };\r\n    render() {\r\n  \r\n      return (\r\n        <div>\r\n          <InstructorsTable onInstructorsTableUpdate={this.handleInstructorsTable.bind(this)} onInstructorRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} instructors={this.state.instructors} filterText={this.state.filterText}/>\r\n          <button className = 'button is-warning is-rounded is-medium' onClick={this.handleSend.bind(this)}>Update Form</button>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n  class InstructorsTable extends React.Component {\r\n  \r\n    render() {\r\n      var onInstructorsTableUpdate = this.props.onInstructorsTableUpdate;\r\n      var rowDel = this.props.onRowDel;\r\n      var filterText = this.props.filterText;\r\n      var instructor = this.props.instructors.map(function(instructor) {\r\n        if (instructor.section.indexOf(filterText) === -1) {\r\n          return;\r\n        }\r\n        return (<InstructorRow onInstructorsTableUpdate={onInstructorsTableUpdate} instructor={instructor} onDelEvent={rowDel.bind(this)} key={instructor.id}/>)\r\n      });\r\n      return (\r\n        <div className=\"columns is-max-desktop is-centered\">\r\n        <div>\r\n  \r\n  \r\n          <table className=\"table is-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Section</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Phone</th>\r\n                <th>Office</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n  \r\n            <tbody>\r\n              {instructor}\r\n  \r\n            </tbody>\r\n  \r\n          </table>\r\n          <button onClick={this.props.onInstructorRowAdd} className=\"button is-primary is-rounded\">Add New Row</button>\r\n  \r\n        </div>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  class InstructorRow extends React.Component {\r\n    onDelEvent() {\r\n      this.props.onDelEvent(this.props.instructor);\r\n  \r\n    }\r\n    render() {\r\n  \r\n      return (\r\n        <tr>\r\n          <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"section\",\r\n            value: this.props.instructor.section,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n          <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"fname\",\r\n            value: this.props.instructor.fname,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n           <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"lname\",\r\n            value: this.props.instructor.lname,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n            <InstructorEditableCellNumbers onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"phone\",\r\n            value: this.props.instructor.phone,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n          <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"office\",\r\n            value: this.props.instructor.office,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n             <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"email\",\r\n            value: this.props.instructor.email,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n           <button onClick={this.onDelEvent.bind(this)}  className=\"button is-danger is-rounded\">Remove</button>\r\n        </tr>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  class InstructorEditableCell extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <textarea class=\"textarea is-info\" rows=\"2\" name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onInstructorsTableUpdate}/>\r\n        </td>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n  class InstructorEditableCellNumbers extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <input type='number' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onInstructorsTableUpdate}/>\r\n        </td>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  export default TA\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n   /*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\Coordinator.js",["178","179","180","181","182","183"],"import 'bulma/css/bulma.css';\r\nimport React, { useState, useEffect , Component} from 'react'\r\nimport './Components.css';\r\nimport axios from \"axios\";\r\n\r\n\r\nasync function update_Django_backend(state) {\r\n  var API_URL = \"http://localhost:8000/api/course_coordinators/\";\r\n\r\n  var arrayLength = state.instructors.length;\r\n  for (var i = 0; i < arrayLength; i++) {\r\n    \r\n    axios.post(API_URL, state.instructors[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n    \r\n    //may somehow get away with doing it without duplicates\r\n    axios.put(`http://localhost:8000/api/course_coordinators/${state.instructors[i].id}`, state.instructors[i]).then((response) => {\r\n      console.log(response.data);\r\n      console.log(response.status);\r\n      console.log(response.statusText);\r\n      console.log(response.headers);\r\n      console.log(response.config);\r\n    }, (error) => {\r\n      console.log(error.request);\r\n      console.log(error);\r\n    });\r\n}}\r\n\r\nasync function update_Django(state) {\r\n  const response = await update_Django_backend(state);\r\n  return response;\r\n}\r\n\r\nclass Coordinator extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {};\r\n      this.state.filterText = \"\";\r\n      this.state.instructors = [\r\n        {\r\n          id: 1,\r\n          course_outline_id: 101,\r\n          section: '',\r\n          fname: '',\r\n          lname: '',\r\n          phone: '',\r\n          office: '',\r\n          email: '',\r\n        },\r\n     \r\n      ];\r\n      var API_URL = \"http://localhost:8000/api/course_coordinators/\";\r\n      axios\r\n      .get(API_URL)\r\n      .then(res => this.setState({ instructors: res.data }))\r\n      .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if(this.props.isClicked !== prevProps.isClicked || this.state.instructors.length< 1){\r\n         this.setState({\r\n          filterText : '',\r\n          instructors:[\r\n            {\r\n              id: 1,\r\n              course_outline_id: 101,\r\n              section: '',\r\n              fname: '',\r\n              lname: '',\r\n              phone: '',\r\n              office: '',\r\n              email: '',\r\n            }\r\n          ]\r\n       });\r\n        console.log(update_Django(this.state));\r\n      }\r\n    }\r\n\r\n\r\n\r\n    handleUserInput(filterText) {\r\n      this.setState({filterText: filterText});\r\n    };\r\n    handleRowDel(instructor) {\r\n      var index = this.state.instructors.indexOf(instructor);\r\n      axios.delete(`http://localhost:8000/api/course_coordinators/${this.state.instructors[index].id}`).then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.status);\r\n        console.log(response.statusText);\r\n        console.log(response.headers);\r\n        console.log(response.config);\r\n      }, (error) => {\r\n        console.log(error.request);\r\n        console.log(error);\r\n      });\r\n\r\n      this.state.instructors.splice(index, 1);\r\n      var temp_state = this.state.instructors;\r\n      var arrayLength = temp_state.length;\r\n      for (var i = 0; i < arrayLength; i++) {\r\n        temp_state[i].id = i+1;\r\n      }\r\n  \r\n      this.setState(temp_state);\r\n    };\r\n\r\n    handleSend(evt){\r\n      console.log(this.state.instructors);\r\n      console.log(update_Django(this.state));\r\n    }\r\n  \r\n    handleAddEvent(evt) {\r\n      var id = this.state.instructors.length + 1;\r\n      var instructor = {\r\n        id: id,\r\n        course_outline_id: 101,\r\n        section: '',\r\n        fname: '',\r\n        lname: '',\r\n        phone: '',\r\n        office: '',\r\n        email: '',\r\n      }\r\n      this.state.instructors.push(instructor);\r\n      this.setState(this.state.instructors);\r\n  \r\n    }\r\n  \r\n    handleInstructorsTable(evt) {\r\n      var item = {\r\n        id: evt.target.id,\r\n        name: evt.target.name,\r\n        value: evt.target.value\r\n      };\r\n  var instructors = this.state.instructors.slice();\r\n    var newinstructors = instructors.map(function(instructor) {\r\n  \r\n      for (var key in instructor) {\r\n        if (key == item.name && instructor.id == item.id) {\r\n          instructor[key] = item.value;\r\n  \r\n        }\r\n      }\r\n      return instructor;\r\n    });\r\n      this.setState({instructors:newinstructors});\r\n    //  console.log(this.state.instructors);\r\n    };\r\n    render() {\r\n  \r\n      return (\r\n        <div>\r\n          <InstructorsTable onInstructorsTableUpdate={this.handleInstructorsTable.bind(this)} onInstructorRowAdd={this.handleAddEvent.bind(this)} onRowDel={this.handleRowDel.bind(this)} instructors={this.state.instructors} filterText={this.state.filterText}/>\r\n          <button className = 'button is-warning is-rounded is-medium' onClick={this.handleSend.bind(this)}>Update Form</button>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n  class InstructorsTable extends React.Component {\r\n  \r\n    render() {\r\n      var onInstructorsTableUpdate = this.props.onInstructorsTableUpdate;\r\n      var rowDel = this.props.onRowDel;\r\n      var filterText = this.props.filterText;\r\n      var instructor = this.props.instructors.map(function(instructor) {\r\n        if (instructor.section.indexOf(filterText) === -1) {\r\n          return;\r\n        }\r\n        return (<InstructorRow onInstructorsTableUpdate={onInstructorsTableUpdate} instructor={instructor} onDelEvent={rowDel.bind(this)} key={instructor.id}/>)\r\n      });\r\n      return (\r\n        <div className=\"columns is-max-desktop is-centered\">\r\n        <div>\r\n  \r\n  \r\n          <table className=\"table is-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Section</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Phone</th>\r\n                <th>Office</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n  \r\n            <tbody>\r\n              {instructor}\r\n  \r\n            </tbody>\r\n  \r\n          </table>\r\n          <button onClick={this.props.onInstructorRowAdd} className=\"button is-primary is-rounded\">Add New Row</button>\r\n  \r\n        </div>\r\n        </div>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  \r\n  class InstructorRow extends React.Component {\r\n    onDelEvent() {\r\n      this.props.onDelEvent(this.props.instructor);\r\n  \r\n    }\r\n    render() {\r\n  \r\n      return (\r\n        <tr>\r\n          <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"section\",\r\n            value: this.props.instructor.section,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n          <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"fname\",\r\n            value: this.props.instructor.fname,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n           <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"lname\",\r\n            value: this.props.instructor.lname,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n            <InstructorEditableCellNumbers onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"phone\",\r\n            value: this.props.instructor.phone,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n          <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"office\",\r\n            value: this.props.instructor.office,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n             <InstructorEditableCell onInstructorsTableUpdate={this.props.onInstructorsTableUpdate} cellData={{\r\n            type: \"email\",\r\n            value: this.props.instructor.email,\r\n            id: this.props.instructor.id\r\n          }}/>\r\n           <button onClick={this.onDelEvent.bind(this)}  className=\"button is-danger is-rounded\">Remove</button>\r\n        </tr>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n  class InstructorEditableCell extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <textarea class=\"textarea is-info\" rows=\"2\" name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onInstructorsTableUpdate}/>\r\n        </td>\r\n      );\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n  class InstructorEditableCellNumbers extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <td>\r\n          <input type='number' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onInstructorsTableUpdate}/>\r\n        </td>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  export default Coordinator\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n   /*\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n","C:\\Users\\Myles\\Documents\\Masters\\Fall term\\WebDevProject\\Django-React-Project\\MileStone-1\\course-app\\src\\Components\\CourseSelector.js",["184","185","186","187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":39,"nodeType":"194","messageId":"195","endLine":2,"endColumn":48},{"ruleId":"198","severity":1,"message":"199","line":276,"column":17,"nodeType":"200","messageId":"201","endLine":276,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":276,"column":50,"nodeType":"200","messageId":"201","endLine":276,"endColumn":52},{"ruleId":"202","severity":1,"message":"203","line":317,"column":11,"nodeType":"204","messageId":"205","endLine":317,"endColumn":18},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"198","severity":1,"message":"199","line":124,"column":17,"nodeType":"200","messageId":"201","endLine":124,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":124,"column":47,"nodeType":"200","messageId":"201","endLine":124,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":161,"column":9,"nodeType":"204","messageId":"205","endLine":161,"endColumn":16},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"198","severity":1,"message":"199","line":126,"column":17,"nodeType":"200","messageId":"201","endLine":126,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":126,"column":52,"nodeType":"200","messageId":"201","endLine":126,"endColumn":54},{"ruleId":"202","severity":1,"message":"203","line":168,"column":9,"nodeType":"204","messageId":"205","endLine":168,"endColumn":16},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":39,"nodeType":"194","messageId":"195","endLine":2,"endColumn":48},{"ruleId":"198","severity":1,"message":"199","line":128,"column":17,"nodeType":"200","messageId":"201","endLine":128,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":128,"column":44,"nodeType":"200","messageId":"201","endLine":128,"endColumn":46},{"ruleId":"202","severity":1,"message":"203","line":160,"column":11,"nodeType":"204","messageId":"205","endLine":160,"endColumn":18},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":39,"nodeType":"194","messageId":"195","endLine":2,"endColumn":48},{"ruleId":"198","severity":1,"message":"199","line":138,"column":17,"nodeType":"200","messageId":"201","endLine":138,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":138,"column":47,"nodeType":"200","messageId":"201","endLine":138,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":170,"column":11,"nodeType":"204","messageId":"205","endLine":170,"endColumn":18},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"198","severity":1,"message":"199","line":127,"column":25,"nodeType":"200","messageId":"201","endLine":127,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":127,"column":53,"nodeType":"200","messageId":"201","endLine":127,"endColumn":55},{"ruleId":"202","severity":1,"message":"203","line":159,"column":17,"nodeType":"204","messageId":"205","endLine":159,"endColumn":24},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"198","severity":1,"message":"199","line":139,"column":17,"nodeType":"200","messageId":"201","endLine":139,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":139,"column":49,"nodeType":"200","messageId":"201","endLine":139,"endColumn":51},{"ruleId":"202","severity":1,"message":"203","line":176,"column":9,"nodeType":"204","messageId":"205","endLine":176,"endColumn":16},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":39,"nodeType":"194","messageId":"195","endLine":2,"endColumn":48},{"ruleId":"198","severity":1,"message":"199","line":124,"column":17,"nodeType":"200","messageId":"201","endLine":124,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":124,"column":46,"nodeType":"200","messageId":"201","endLine":124,"endColumn":48},{"ruleId":"202","severity":1,"message":"203","line":156,"column":11,"nodeType":"204","messageId":"205","endLine":156,"endColumn":18},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":39,"nodeType":"194","messageId":"195","endLine":2,"endColumn":48},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"198","severity":1,"message":"199","line":127,"column":25,"nodeType":"200","messageId":"201","endLine":127,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":127,"column":53,"nodeType":"200","messageId":"201","endLine":127,"endColumn":55},{"ruleId":"202","severity":1,"message":"203","line":159,"column":17,"nodeType":"204","messageId":"205","endLine":159,"endColumn":24},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":39,"nodeType":"194","messageId":"195","endLine":2,"endColumn":48},{"ruleId":"198","severity":1,"message":"199","line":150,"column":17,"nodeType":"200","messageId":"201","endLine":150,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":150,"column":47,"nodeType":"200","messageId":"201","endLine":150,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":182,"column":11,"nodeType":"204","messageId":"205","endLine":182,"endColumn":18},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":39,"nodeType":"194","messageId":"195","endLine":2,"endColumn":48},{"ruleId":"198","severity":1,"message":"199","line":151,"column":17,"nodeType":"200","messageId":"201","endLine":151,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":151,"column":47,"nodeType":"200","messageId":"201","endLine":151,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":183,"column":11,"nodeType":"204","messageId":"205","endLine":183,"endColumn":18},{"ruleId":"192","severity":1,"message":"197","line":2,"column":17,"nodeType":"194","messageId":"195","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":36},{"ruleId":"192","severity":1,"message":"196","line":2,"column":38,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"192","severity":1,"message":"206","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":13},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from function.","ReturnStatement","expectedReturnValue","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]